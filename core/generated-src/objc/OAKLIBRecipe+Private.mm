// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from application.djinni

#import "OAKLIBRecipe+Private.h"
#import "OAKLIBRecipe.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "OAKLIBDish+Private.h"
#import "OAKLIBMenu+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface OAKLIBRecipe ()

- (id)initWithCpp:(const std::shared_ptr<::oaktree_gen::Recipe>&)cppRef;

@end

@implementation OAKLIBRecipe {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::oaktree_gen::Recipe>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::oaktree_gen::Recipe>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (nullable OAKLIBDish *)getDish {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->get_dish();
        return ::djinni_generated::Dish::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (OAKLIBMenu)getMenu {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->get_menu();
        return ::djinni::Enum<::oaktree_gen::Menu, OAKLIBMenu>::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto Recipe::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto Recipe::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<OAKLIBRecipe>(cpp);
}

}  // namespace djinni_generated

@end
