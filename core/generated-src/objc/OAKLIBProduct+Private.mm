// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from simi.djinni

#import "OAKLIBProduct+Private.h"
#import "OAKLIBProduct.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "OAKLIBSimpleCursor+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface OAKLIBProduct ()

- (id)initWithCpp:(const std::shared_ptr<::oaktree_gen::Product>&)cppRef;

@end

@implementation OAKLIBProduct {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::oaktree_gen::Product>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::oaktree_gen::Product>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (nonnull NSString *)getId {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->get_id();
        return ::djinni::String::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSString *)getName {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->get_name();
        return ::djinni::String::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSString *)getPrice {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->get_price();
        return ::djinni::String::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)isInStock {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->is_in_stock();
        return ::djinni::Bool::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSString *)getImageUrl {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->get_image_url();
        return ::djinni::String::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nullable OAKLIBProduct *)getInstance:(nullable id<OAKLIBSimpleCursor>)cursor {
    try {
        auto objcpp_result_ = ::oaktree_gen::Product::get_instance(::djinni_generated::SimpleCursor::toCpp(cursor));
        return ::djinni_generated::Product::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto Product::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto Product::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<OAKLIBProduct>(cpp);
}

}  // namespace djinni_generated

@end
